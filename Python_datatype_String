{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "36eb9ec8-5798-4d8c-b534-f497bbb732db",
   "metadata": {},
   "source": [
    "# Python datatype string\n",
    "A string in a python is a sequence of characters enclosed within single quotes' ',double quotes\" \",or triple quotes''' '''/\"\"\"/\"\"\".\n",
    "\n",
    "#definition and key points\n",
    "\n",
    "Immutable:Once created,it cannot be changed.\n",
    "\n",
    "Interable:You can loop through it character by character.\n",
    "\n",
    "supports indexing ans slicing."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8c202191-427c-44c3-83ce-59becdd292e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'str'>\n"
     ]
    }
   ],
   "source": [
    "name=\"Kajal\"\n",
    "print(type(name))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "b253fade-733d-4f79-b214-9e7d5f8404f8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello\n",
      "Kajal\n"
     ]
    }
   ],
   "source": [
    "#single line strings\n",
    "str1=\"Hello\"\n",
    "str2=\"Kajal\"\n",
    "print(str1)\n",
    "print(str2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "5644c4f1-3848-4b00-8c11-46ef987d85da",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "My name is Kajal Mahadev Raut.\tI am 23 years old.\n"
     ]
    }
   ],
   "source": [
    "#Multi-line string\n",
    "str=\"My name is Kajal Mahadev Raut.\\tI am 23 years old.\"\n",
    "print(str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "80756026-198d-45f3-9356-67b57f9d0eb1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "l\n",
      "ajal \n",
      " \n",
      "Kaja\n",
      " Raut\n",
      "al Ra\n"
     ]
    }
   ],
   "source": [
    "#indexing and slicing\n",
    "str4=\"Kajal Raut\"\n",
    "print(str4[4])\n",
    "print(str4[1:6])\n",
    "print(str4[-5:-4])\n",
    "print(str4[:4])\n",
    "print(str4[5:])\n",
    "print(str4[-7:-2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "dac349f2-d810-4fdc-a88b-6947b389fcb0",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "False\n"
     ]
    }
   ],
   "source": [
    "print(str4.endswith(\"jal\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "363633e7-ebbf-4543-a596-167f784b38ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "True\n"
     ]
    }
   ],
   "source": [
    "print(str4.endswith(\"aut\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "a00939ad-f91b-4a87-9bc3-2e505254666d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Kajal raut\n",
      "Kajal raut\n"
     ]
    }
   ],
   "source": [
    "str5=\"kajal Raut\"\n",
    "print(str5.capitalize())\n",
    "str5=str5.capitalize()\n",
    "print(str5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "c53d888a-062a-43a4-9a3b-80ce454d7b35",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pytton\n",
      "Javascript\n",
      "4\n"
     ]
    }
   ],
   "source": [
    "str6=\"Python\"\n",
    "print(str6.replace(\"h\",\"t\"))\n",
    "print(str6.replace(\"Python\",\"Javascript\"))\n",
    "print(str6.find(\"o\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "ad7b498d-eeef-407a-be4c-169e7811d2c4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3\n"
     ]
    }
   ],
   "source": [
    "str7=\"Hi,$I am the $ symbol $99.99\"\n",
    "print(str7.count(\"$\"))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bc7a6196-7ab8-4fd2-a066-4c71e527d11e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python [conda env:base] *",
   "language": "python",
   "name": "conda-base-py"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
